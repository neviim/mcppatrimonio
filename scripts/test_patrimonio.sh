#!/bin/bash

# Script para testar busca de patrim√¥nio via HTTP
# Uso: ./test_patrimonio.sh [ID_PATRIMONIO]

# Configura√ß√£o
API_KEY="e96ba5d6448d3839eda27f78f49a4f3c7c84053cb0c22f1dd8b734983def2789"
BASE_URL="http://localhost:3000"
PATRIMONIO_ID="${1:-3577}"

echo "==================================="
echo "Teste MCP Patrim√¥nio - HTTP Mode"
echo "==================================="
echo ""

# 1. Verificar servidor
echo "1Ô∏è‚É£  Verificando servidor..."
HEALTH=$(curl -s $BASE_URL/health)
if [ $? -eq 0 ]; then
  echo "‚úÖ Servidor est√° rodando"
  echo "$HEALTH" | jq -C '.'
else
  echo "‚ùå Servidor n√£o est√° acess√≠vel em $BASE_URL"
  exit 1
fi
echo ""

# 2. Listar sess√µes ativas
echo "2Ô∏è‚É£  Verificando sess√µes ativas..."
SESSIONS=$(curl -s $BASE_URL/mcp/sessions \
  -H "Authorization: Bearer $API_KEY")
echo "$SESSIONS" | jq -C '.'
echo ""

# 3. Criar nova sess√£o em background
echo "3Ô∏è‚É£  Criando nova sess√£o MCP..."
curl -N -X POST $BASE_URL/mcp/session \
  -H "Authorization: Bearer $API_KEY" \
  -H "Content-Type: application/json" 2>/dev/null | while IFS= read -r line; do
    echo "üì° $line"
done &

SESSION_PID=$!
sleep 3

# 4. Obter session ID
echo ""
echo "4Ô∏è‚É£  Obtendo ID da sess√£o..."
SESSION_ID=$(curl -s $BASE_URL/mcp/sessions \
  -H "Authorization: Bearer $API_KEY" | jq -r '.sessions[0].sessionId')

if [ -z "$SESSION_ID" ] || [ "$SESSION_ID" = "null" ]; then
  echo "‚ùå N√£o foi poss√≠vel obter o session ID"
  kill $SESSION_PID 2>/dev/null
  exit 1
fi

echo "‚úÖ Session ID: $SESSION_ID"
echo ""

# 5. Buscar patrim√¥nio
echo "5Ô∏è‚É£  Buscando patrim√¥nio ID: $PATRIMONIO_ID..."
RESPONSE=$(curl -s -X POST $BASE_URL/mcp/message/$SESSION_ID \
  -H "Authorization: Bearer $API_KEY" \
  -H "Content-Type: application/json" \
  -d "{
    \"jsonrpc\": \"2.0\",
    \"id\": 1,
    \"method\": \"tools/call\",
    \"params\": {
      \"name\": \"neviim_get_patrimonio_por_id\",
      \"arguments\": {
        \"id\": \"$PATRIMONIO_ID\"
      }
    }
  }")

echo "üì§ Mensagem enviada:"
echo "$RESPONSE" | jq -C '.'
echo ""

# Aguardar resposta no stream
echo "‚è≥ Aguardando resposta no stream (5 segundos)..."
sleep 5
echo ""

# 6. Fechar sess√£o
echo "6Ô∏è‚É£  Fechando sess√£o..."
CLOSE_RESPONSE=$(curl -s -X DELETE $BASE_URL/mcp/session/$SESSION_ID \
  -H "Authorization: Bearer $API_KEY")
echo "$CLOSE_RESPONSE" | jq -C '.'

# Matar processo do stream
kill $SESSION_PID 2>/dev/null

echo ""
echo "==================================="
echo "‚úÖ Teste conclu√≠do!"
echo "==================================="
echo ""
echo "üí° Dica: A resposta do patrim√¥nio aparece no stream da sess√£o (item 3Ô∏è‚É£)"
echo ""
